/* tslint:disable */
/* eslint-disable */
/**
 * qwen-code-api-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
import {
  type InlineResponse2001Session,
  InlineResponse2001SessionFromJSON,
  InlineResponse2001SessionToJSON,
} from "./index.ts";

/**
 *
 * @export
 * @interface InlineResponse2001
 */
export interface InlineResponse2001 {
  /**
   * 是否成功
   * @type {boolean}
   * @memberof InlineResponse2001
   */
  success?: boolean;
  /**
   * 错误信息
   * @type {string}
   * @memberof InlineResponse2001
   */
  error?: string;
  /**
   * 错误信息
   * @type {string}
   * @memberof InlineResponse2001
   */
  message?: string;
  /**
   * 会话ID
   * @type {string}
   * @memberof InlineResponse2001
   */
  sessionId?: string;
  /**
   *
   * @type {InlineResponse2001Session}
   * @memberof InlineResponse2001
   */
  session?: InlineResponse2001Session;
}

export function InlineResponse2001FromJSON(json: any): InlineResponse2001 {
  return InlineResponse2001FromJSONTyped(json, false);
}

export function InlineResponse2001FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): InlineResponse2001 {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    success: !exists(json, "success") ? undefined : json["success"],
    error: !exists(json, "error") ? undefined : json["error"],
    message: !exists(json, "message") ? undefined : json["message"],
    sessionId: !exists(json, "sessionId") ? undefined : json["sessionId"],
    session: !exists(json, "session")
      ? undefined
      : InlineResponse2001SessionFromJSON(json["session"]),
  };
}

export function InlineResponse2001ToJSON(
  value?: InlineResponse2001 | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    success: value.success,
    error: value.error,
    message: value.message,
    sessionId: value.sessionId,
    session: InlineResponse2001SessionToJSON(value.session),
  };
}
