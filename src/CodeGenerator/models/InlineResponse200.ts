/* tslint:disable */
/* eslint-disable */
/**
 * qwen-code-api-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from "../runtime.ts";
/**
 *
 * @export
 * @interface InlineResponse200
 */
export interface InlineResponse200 {
  /**
   *
   * @type {boolean}
   * @memberof InlineResponse200
   */
  success: boolean;
  /**
   *
   * @type {string}
   * @memberof InlineResponse200
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse200
   */
  messageType?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse200
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse200
   */
  error?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse200
   */
  message?: string;
}

export function InlineResponse200FromJSON(json: any): InlineResponse200 {
  return InlineResponse200FromJSONTyped(json, false);
}

export function InlineResponse200FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): InlineResponse200 {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    success: json["success"],
    type: !exists(json, "type") ? undefined : json["type"],
    messageType: !exists(json, "messageType") ? undefined : json["messageType"],
    content: !exists(json, "content") ? undefined : json["content"],
    error: !exists(json, "error") ? undefined : json["error"],
    message: !exists(json, "message") ? undefined : json["message"],
  };
}

export function InlineResponse200ToJSON(value?: InlineResponse200 | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    success: value.success,
    type: value.type,
    messageType: value.messageType,
    content: value.content,
    error: value.error,
    message: value.message,
  };
}
